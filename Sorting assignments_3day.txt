1. Write a C program to implement bubble sort

#include <stdio.h>

void swap(int *y,int *s)
{
    int temp=*y;
    *y=*s;*s=temp;
}

void bubble_sort(int n,int y[])
{
    for(int i=0;i<n-1;i++)
    {
        for(int j=0;j<n-i-1;j++)
        {
            if(y[j]>y[j+1])
                swap(&y[j],&y[j+1]);
        }
    }
}

int main()
{
    int i,n;
    printf("enter size of array\t");scanf("%d",&n);
    int y[n];
    for(i=0;i<n;i++)
    {
        printf("\nenter element %d\t",i+1);scanf("%d",&y[i]);
    }
    bubble_sort(n,y);
    printf("\n\narray elements after bubble sorting is done\n");
    for(i=0;i<n;i++)
    {
        printf("%d",y[i]);
    }
    return 0;
}

2. Write a C program to implement quick sort

#include<stdio.h>
void quicksort(int number[25],int first,int last){
   int i, j, pivot, temp;

   if(first<last){
      pivot=first;
      i=first;
      j=last;

      while(i<j){
         while(number[i]<=number[pivot]&&i<last)
            i++;
         while(number[j]>number[pivot])
            j--;
         if(i<j){
            temp=number[i];
            number[i]=number[j];
            number[j]=temp;
         }
      }

      temp=number[pivot];
      number[pivot]=number[j];
      number[j]=temp;
      quicksort(number,first,j-1);
      quicksort(number,j+1,last);

   }
}

int main(){
   int i,n;
   printf("enter number of elements of array");
   scanf("%d",&n);
   int y[n];
   printf("Enter %d elements: ", n);
   for(i=0;i<n;i++)
      scanf("%d",&y[i]);

   quicksort(y,0,n-1);

   printf("Order of Sorted elements: ");
   for(i=0;i<n;i++)
      printf(" %d",y[i]);

   return 0;
}